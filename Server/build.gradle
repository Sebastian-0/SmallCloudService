plugins {
    id 'java'
}

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha5'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'org.eclipse.jetty:jetty-server:11.0.3'
    implementation 'org.eclipse.jetty:jetty-servlet:11.0.3'
    implementation 'org.eclipse.jetty:jetty-servlets:11.0.3'
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet-core:3.0.2'
//    implementation 'org.glassfish.jersey.core:jersey-client:3.0.2'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.0.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

test {
    useJUnitPlatform()
}

task copyToLib( type: Copy ) {
    into "$buildDir/libs/lib"
    from configurations.runtimeClasspath
}

jar {
    manifest {
        attributes 'Main-Class':'cloudservice.Server',
                'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
    dependsOn copyToLib
}

task packageDistibution(type: Zip) {
    archiveFileName = "${project.name}-${project.version}.zip"
    destinationDirectory = file("$buildDir")

    from "$buildDir/libs"
}

build {
    dependsOn packageDistibution
}